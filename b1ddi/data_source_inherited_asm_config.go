// Code generated by go-swagger; DO NOT EDIT.

package b1ddi

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
)

// IpamsvcInheritedASMConfig InheritedASMConfig
//
// The inheritance configuration for the __ASMConfig__ object.
//
// swagger:model ipamsvcInheritedASMConfig
func dataSourceIpamsvcInheritedASMConfig() *schema.Resource {
	return &schema.Resource{
		Schema: map[string]*schema.Schema{

			// The block of ASM fields: _enable_, _enable_notification_, _reenable_date_.
			"asm_enable_block": {
				Type:        schema.TypeList,
				Elem:        dataSourceIpamsvcInheritedAsmEnableBlock(),
				MaxItems:    1,
				Optional:    true,
				Description: "The block of ASM fields: _enable_, _enable_notification_, _reenable_date_.",
			},

			// The block of ASM fields: _growth_factor_, _growth_type_.
			"asm_growth_block": {
				Type:        schema.TypeList,
				Elem:        dataSourceIpamsvcInheritedAsmGrowthBlock(),
				MaxItems:    1,
				Optional:    true,
				Description: "The block of ASM fields: _growth_factor_, _growth_type_.",
			},

			// ASM shows the number of addresses forecast to be used _forecast_period_ days in the future, if it is greater than _asm_threshold_percent_ * _dhcp_total_ (see _dhcp_utilization_) then the subnet is flagged.
			"asm_threshold": {
				Type:        schema.TypeList,
				Elem:        dataSourceInheritanceInheritedUInt32(),
				MaxItems:    1,
				Optional:    true,
				Description: "ASM shows the number of addresses forecast to be used _forecast_period_ days in the future, if it is greater than _asm_threshold_percent_ * _dhcp_total_ (see _dhcp_utilization_) then the subnet is flagged.",
			},

			// The forecast period in days.
			"forecast_period": {
				Type:        schema.TypeList,
				Elem:        dataSourceInheritanceInheritedUInt32(),
				MaxItems:    1,
				Optional:    true,
				Description: "The forecast period in days.",
			},

			// The minimum amount of history needed before ASM can run on this subnet.
			"history": {
				Type:        schema.TypeList,
				Elem:        dataSourceInheritanceInheritedUInt32(),
				MaxItems:    1,
				Optional:    true,
				Description: "The minimum amount of history needed before ASM can run on this subnet.",
			},

			// The minimum size of range needed for ASM to run on this subnet.
			"min_total": {
				Type:        schema.TypeList,
				Elem:        dataSourceInheritanceInheritedUInt32(),
				MaxItems:    1,
				Optional:    true,
				Description: "The minimum size of range needed for ASM to run on this subnet.",
			},

			// The minimum percentage of addresses that must be available outside of the DHCP ranges and fixed addresses when making a suggested change.
			"min_unused": {
				Type:        schema.TypeList,
				Elem:        dataSourceInheritanceInheritedUInt32(),
				MaxItems:    1,
				Optional:    true,
				Description: "The minimum percentage of addresses that must be available outside of the DHCP ranges and fixed addresses when making a suggested change.",
			},
		},
	}
}
