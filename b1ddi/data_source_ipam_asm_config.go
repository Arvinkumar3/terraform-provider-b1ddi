// Code generated by go-swagger; DO NOT EDIT.

package b1ddi

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
)

// IpamsvcASMConfig ASMConfig
//
// The __ASMConfig__ object represents Automated Scope Management configuration.
//
// swagger:model ipamsvcASMConfig
func dataSourceIpamsvcASMConfig() *schema.Resource {
	return &schema.Resource{
		Schema: map[string]*schema.Schema{

			// ASM shows the number of addresses forecast to be used _forecast_period_ days in the future, if it is greater than _asm_threshold_ percent * _dhcp_total_ (see _dhcp_utilization_) then the subnet is flagged.
			"asm_threshold": {
				Type:        schema.TypeInt,
				Optional:    true,
				Description: "ASM shows the number of addresses forecast to be used _forecast_period_ days in the future, if it is greater than _asm_threshold_ percent * _dhcp_total_ (see _dhcp_utilization_) then the subnet is flagged.",
			},

			// Indicates if Automated Scope Management is enabled.
			"enable": {
				Type:        schema.TypeBool,
				Optional:    true,
				Description: "Indicates if Automated Scope Management is enabled.",
			},

			// Indicates if ASM should send notifications to the user.
			"enable_notification": {
				Type:        schema.TypeBool,
				Optional:    true,
				Description: "Indicates if ASM should send notifications to the user.",
			},

			// The forecast period in days.
			"forecast_period": {
				Type:        schema.TypeInt,
				Optional:    true,
				Description: "The forecast period in days.",
			},

			// Indicates the growth in the number or percentage of IP addresses.
			"growth_factor": {
				Type:        schema.TypeInt,
				Optional:    true,
				Description: "Indicates the growth in the number or percentage of IP addresses.",
			},

			// The type of factor to use: _percent_ or _count_.
			"growth_type": {
				Type:        schema.TypeString,
				Optional:    true,
				Description: "The type of factor to use: _percent_ or _count_.",
			},

			// The minimum amount of history needed before ASM can run on this subnet.
			"history": {
				Type:        schema.TypeInt,
				Optional:    true,
				Description: "The minimum amount of history needed before ASM can run on this subnet.",
			},

			// The minimum size of range needed for ASM to run on this subnet.
			"min_total": {
				Type:        schema.TypeInt,
				Optional:    true,
				Description: "The minimum size of range needed for ASM to run on this subnet.",
			},

			// The minimum percentage of addresses that must be available outside of the DHCP ranges and fixed addresses
			// when making a suggested change..
			"min_unused": {
				Type:        schema.TypeInt,
				Optional:    true,
				Description: "The minimum percentage of addresses that must be available outside of the DHCP ranges and fixed addresses\nwhen making a suggested change..",
			},

			// reenable date
			// Format: date-time
			"reenable_date": {
				Type:     schema.TypeString,
				Optional: true,
				ValidateFunc: validation.IsRFC3339Time,
			},
		},
	}
}
